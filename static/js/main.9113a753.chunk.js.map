{"version":3,"sources":["ModalContext.js","UserPick.js","HousePick.js","Result.js","Ring.js","modal.js","Game.js","index.js"],"names":["ModalContext","React","createContext","ModalProvider","children","useState","isModalOpen","setIsModalOpen","Provider","value","show","hide","useModalContext","useContext","UserPick","props","className","iswinner","id","p","name","src","img","alt","HousePick","console","log","Result","m","type","onClick","Ring","Upicked","setUpicked","Hpicked","setHpicked","Message","setMessage","isWinner","setIsWinner","Status","setStatus","pick","item","i","r","filter","a","Math","floor","random","items","cases","traingle","width","height","Modal","Game","storedScore","document","cookie","split","find","startsWith","score","setScore","showIndex","setShowIndex","index","setIndex","indexColor","setIndexColor","useEffect","delta","setTimeout","clearTimeout","scr","Number","href","target","rel","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9113a753.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nconst ModalContext = React.createContext();\n\nconst ModalProvider = ({ children }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const show = () => {\n    setIsModalOpen(true);\n  };\n  const hide = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <ModalContext.Provider value={{ isModalOpen, show, hide }}>\n      {children}\n    </ModalContext.Provider>\n  );\n};\nexport const useModalContext = () => {\n  return useContext(ModalContext);\n};\nexport { ModalContext, ModalProvider };\n","import React from \"react\";\nexport const UserPick = (props) => {\n  return (\n    <>\n      <div\n        className={`${\n          props.iswinner ? \"btn-outline-get winner\" : \"btn-outline-get\"\n        }`}\n        id={props.p.name}\n      >\n        <div className=\"btn-inner-get\">\n          <img src={props.p.img} alt=\"\" />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nexport const HousePick = (props) => {\n  console.log(\"H\", props.iswinner);\n  return (\n    <>\n      <div\n        className={`${\n          !props.iswinner ? \"btn-outline-get winner\" : \"btn-outline-get\"\n        }`}\n        id={props.p.name}\n      >\n        <div className=\"btn-inner-get\">\n          <img src={props.p.img} alt=\"\" />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nexport const Result = (props) => {\n  const [show, setShow] = React.useState(false);\n  return (\n    <>\n      <p id=\"message\">{props.m ? \"you win\" : \"you lose\"}</p>\n      <button type=\"button\" onClick={props.onClick} id=\"plyagn\">\n        Play Again\n      </button>\n    </>\n  );\n};\n","import React from \"react\";\nimport { UserPick } from \"./UserPick\";\nimport { HousePick } from \"./HousePick\";\nimport { Result } from \"./Result\";\nimport items from \"./items.json\";\n\nconst Ring = (props) => {\n  //define user move\n  const [Upicked, setUpicked] = React.useState(\"\");\n  //define computer move\n  const [Hpicked, setHpicked] = React.useState(\"\");\n  //you lose ||you win||draw\n  const [Message, setMessage] = React.useState(\"\");\n  //Whose the winner\n  const [isWinner, setIsWinner] = React.useState(true);\n  //track game phase\n  const [Status, setStatus] = React.useState(false);\n  //onclick\n  const pick = (item, i) => {\n    console.log(i);\n    //chose random number for computer\n    let arr = [0, 1, 2].filter((a) => a !== i);\n    const r = arr[Math.floor(Math.random() * 2)];\n    setIsWinner(items.cases[i][r]);\n    //user picked=> change phase\n    setStatus(() => true);\n    //return item picked\n    setUpicked(() => item);\n    //set items picked from random number after 2s\n    setHpicked(items[\"hand\" + r]);\n    console.log(i, r, items.cases[i][r]);\n    setMessage(items.cases[i][r]);\n    props.onClick(items.cases[i][r]);\n  };\n  //reset game\n  const reset = () => {\n    //set initial states\n    setUpicked(\"\");\n    setHpicked(\"\");\n    setMessage(\"\");\n    setStatus(false);\n  };\n  return (\n    <>\n      {!Status ? (\n        <>\n          <div id=\"phase_set\">\n            <div id=\"triangle-box\">\n              <img src={items.traingle} alt=\"\" id=\"triangle\" />\n              <div\n                className=\"btn-outline\"\n                id=\"paper\"\n                onClick={() => pick(items[\"hand0\"], 0)}\n              >\n                <div className=\"btn-inner\">\n                  <img\n                    src={items[\"hand0\"].img}\n                    width=\"51px\"\n                    height=\"58px\"\n                    alt={items[\"hand0\"].name}\n                  />\n                </div>\n              </div>\n              <div\n                className=\"btn-outline\"\n                id=\"scissors\"\n                onClick={() => pick(items[\"hand1\"], 1)}\n              >\n                <div className=\"btn-inner\">\n                  <img\n                    src={items[\"hand1\"].img}\n                    width=\"51px\"\n                    height=\"58px\"\n                    alt={items[\"hand1\"].name}\n                  />\n                </div>\n              </div>\n              <div\n                className=\"btn-outline\"\n                id=\"rock\"\n                onClick={() => pick(items[\"hand2\"], 2)}\n              >\n                <div className=\"btn-inner\">\n                  <img\n                    src={items[\"hand2\"].img}\n                    width=\"51px\"\n                    height=\"58px\"\n                    alt={items[\"hand2\"].name}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <>\n          <div id=\"phase_get\">\n            <div id=\"userpick\">\n              <p>You picked</p>\n              <UserPick p={Upicked} iswinner={isWinner} />\n            </div>\n            <div id=\"outcame\">\n              <Result onClick={() => reset()} m={Message} />\n            </div>\n            <div id=\"housepick\">\n              <p>The House picked</p>\n              <HousePick p={Hpicked} iswinner={isWinner} />\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Ring;\n","import { useModalContext } from \"./ModalContext.js\";\nconst Modal = (props) => {\n  const { isModalOpen, hide } = useModalContext();\n  return (\n    <div className={`modal ${isModalOpen ? \"d-flex\" : \"d-none\"}`}>\n      <div className=\"mdl-container\">\n        <div className=\"mdl-content\">\n          <div id=\"heading-div\">\n            <h1 id=\"heading\">Rules</h1>\n          </div>\n          <div id=\"close-div\">\n            <button className=\"close-modal-btn\" onClick={hide}>\n              x\n            </button>\n          </div>\n          <div id=\"img-div\">\n            <img id=\"rules-img\" src=\"images/image-rules.svg\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Modal;\n","import React from \"react\";\nimport Ring from \"./Ring.js\";\nimport Modal from \"./modal.js\";\nimport { useModalContext } from \"./ModalContext.js\";\nconst Game = () => {\n  const { show } = useModalContext();\n  let storedScore;\n  storedScore =\n    document.cookie &&\n    document.cookie\n      .split(\";\")\n      .find((i) => i.startsWith(\"score=\"))\n      .split(\"=\")[1];\n  const [score, setScore] = React.useState(storedScore ? storedScore : 0);\n  const [showIndex, setShowIndex] = React.useState(false);\n  const [index, setIndex] = React.useState(\"\");\n  const [indexColor, setIndexColor] = React.useState(\"\");\n  const getScore = (i) => {\n    console.log(\"i\", i);\n    if (i) {\n      setScore(Number(score) + 1);\n      setIndexColor(\"text-success\");\n      setIndex(\"+1\");\n      setShowIndex(true);\n    } else {\n      setScore(Number(score) - 1);\n      setIndexColor(\"text-danger\");\n      setIndex(\"-1\");\n      setShowIndex(true);\n    }\n  };\n  React.useEffect(() => {\n    const delta = setTimeout(() => setShowIndex(false), 1000);\n    return () => {\n      clearTimeout(delta);\n    };\n  }, [score]);\n  return (\n    <>\n      <header id=\"header\">\n        <div>\n          <img src=\"images/logo.svg\" alt=\"logo\" />\n        </div>\n        <div id=\"score-card\">\n          <p id=\"score-label\">score</p>\n          <p id=\"score\">\n            {score}\n            <i className={indexColor} id=\"index\">\n              {showIndex && index}\n            </i>\n          </p>\n        </div>\n      </header>\n      <main id=\"main\">\n        <Ring onClick={(scr) => getScore(scr)} />\n      </main>\n      <footer className=\"d-flex flex-column\" id=\"footer\">\n        <button\n          className=\"justify-self-sm-center justify-self-md-end\"\n          id=\"rules\"\n          onClick={show}\n        >\n          Rules\n        </button>\n        <Modal />\n        <div className=\"attribution\">\n          Challenge by{\" \"}\n          <a\n            href=\"https://www.frontendmentor.io?ref=challenge\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Frontend Mentor\n          </a>\n          . Coded by <a href=\"houcine-code.github.io\">Elhoucine</a>.\n        </div>\n      </footer>\n    </>\n  );\n};\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ModalProvider } from \"./ModalContext\";\nimport Game from \"./Game\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ModalProvider>\n      <Game />\n    </ModalProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n/* \n// define hands and there img srcs\nconst hands = {\n  rock: \"images/icon-rock.svg\",\n  scissors: \"images/icon-scissors.svg\",\n  paper: \"./images/icon-paper.svg\",\n};\n//define cases\nconst cases = [\n  [\"d\", 1, 0],\n  [0, \"d\", 1],\n  [1, 0, \"d\"],\n];\n//define result message\nconst message = { 0: \"You Lose\", 1: \"You Win\", d: \"Draw\" };\n\nfunction Message(props) {\n  return (\n    <div className=\"align-self-center px-4\" id=\"outcame\">\n      <p id=\"status\">{message[props.outcame]}</p>\n      <button\n        onClick={props.onClick}\n        className=\"btn btn-light px-4 rounded-3 text-danger\"\n      >\n        Play Again\n      </button>\n    </div>\n  );\n}\nfunction Ring(props) {\n  return (\n    <div className=\"container d-flex justify-content-center\" id=\"ring\">\n      <div id=\"myMove\">\n        <p id=\"myMove-label\">You Picked</p>\n        <div className=\"move-container\" id=\"myMove-pic\">\n          <div\n            className={props.o === 1 ? \"hand-picked winner\" : \"hand\"}\n            id={props.m[0]}\n          >\n            <div id=\"bg-handp\">{props.m[1]}</div>\n          </div>\n        </div>\n      </div>\n       <Message onClick={props.onClick} outcame={props.o}/>\n      <div id=\"compMove\">\n        <p id=\"compMove-label\">The House Picked</p>\n        <div className=\"move-container\" id=\"compMove-pic\">\n          <div\n            className={!props.o ? \"hand-picked winner\" : \"hand\"}\n            id={props.c[0]}\n          >\n            <div id=\"bg-handp\">\n              <div style={{ width: \"70px\", height: \"70px\" }}>{props.c[1]}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nfunction Triangle(props) {\n  return (\n    <div\n      className=\"container d-flex justify-content-center\"\n      id=\"triangle-container\"\n    >\n      <div id=\"triangle\">\n        <img src=\"images/bg-triangle.svg\" alt=\"\" />\n        <button onClick={() => props.onClick(0)} className=\"hand\" id=\"rock\">\n          <div id=\"bg-hand\">\n            <img src={hands[\"rock\"]} alt=\"\" />\n          </div>\n        </button>\n        <button onClick={() => props.onClick(1)} className=\"hand\" id=\"scissors\">\n          <div id=\"bg-hand\">\n            <img src={hands[\"scissors\"]} alt=\"\" />\n          </div>\n        </button>\n        <button onClick={() => props.onClick(2)} className=\"hand\" id=\"paper\">\n          <div id=\"bg-hand\">\n            <img src={hands[\"paper\"]} alt=\"\" />\n          </div>\n        </button>\n      </div>\n    </div>\n  );\n}\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      moves: \"\",\n      ring: false,\n    };\n    this.handleMove = this.handleMove.bind(this);\n  }\n  handleMove(i) {\n    const compMove = Math.floor(Math.random() * 3);\n    setTimeout(\n      () =>\n        this.setState({\n          moves: [i, compMove, cases[i][compMove]],\n          ring: true,\n        }),\n      3000\n    );\n  }\n  reset() {\n    this.setState({\n      ring: false,\n    });\n  }\n  render() {\n    return (\n      <div id=\"game\">\n        <div className=\"d-flex flex-column justify-content-around\" id=\"content\">\n          <div\n            className=\"d-flex align-self-center justify-content-between\"\n            id=\"header\"\n          >\n            <div id=\"logo-panel\">\n              <img src=\"images/logo.svg\" alt=\"\" />\n            </div>\n            <div\n              className=\"d-flex flex-column justify-content-center bg-light rounded\"\n              id=\"score-panel\"\n            >\n              <span id=\"score-label\">Score</span>\n              <span id=\"score\">{this.state.score}</span>\n            </div>\n          </div>\n          <div className=\"\" id=\"board\">\n            {this.state.ring ? (\n              <Ring\n                onClick={() => this.reset()}\n                m={hands[this.state.moves[0]]}\n                c={hands[this.state.moves[1]]}\n                o={this.state.moves[2]}\n              />\n            ) : (\n              <Triangle onClick={(i) => this.handleMove(i)} />\n            )}\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-end\" id=\"options\">\n          Button trigger modal\n          <button\n            className=\"bg-transparent btn-outline-light rounded-3 text-light padd\"\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#exampleModal\"\n          >\n            Rules\n          </button>\n\n          Modal\n          <div\n            className=\"modal fade\"\n            id=\"exampleModal\"\n            tabIndex=\"-1\"\n            aria-labelledby=\"exampleModalLabel\"\n            aria-hidden=\"true\"\n          >\n            <div className=\"modal-dialog modal-dialog-centered\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                    Rules\n                  </h5>\n                  <button\n                    type=\"button\"\n                    className=\"btn-close\"\n                    data-bs-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  ></button>\n                </div>\n                <div className=\"modal-body text-center\">\n                  <img src=\"images/image-rules.svg\" alt=\"\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"attribution\">\n          Challenge by{\" \"}\n          <a\n            href=\"https://www.frontendmentor.io?ref=challenge\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Frontend Mentor\n          </a>\n          . Coded by <a href=\"houcine-code.github.io\">Elhoucine</a>.\n        </div>\n      </div>\n    );\n  }\n} */\n"],"sourceRoot":""}